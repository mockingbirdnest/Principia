// Warning!  This file was generated by running a program (see project |tools|).
// If you change it, the changes will be lost the next time the generator is
// run.  You should change the generator instead.

using System;
using System.Runtime.InteropServices;

namespace principia {
namespace ksp_plugin_adapter {

internal partial class NavigationFrameParameters {
  public int extension;
  public int centre_index;
  private int primary_index;
  private int secondary_index;
}

[StructLayout(LayoutKind.Sequential)]
public partial struct XYZ {
  public double x;
  public double y;
  public double z;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct AdaptiveStepParameters {
  public long integrator_kind;
  public long max_steps;
  public double length_integration_tolerance;
  public double speed_integration_tolerance;
}

internal partial class BodyGeopotentialElement {
  public string degree;
  public string order;
  public string cos;
  public string j;
  public string sin;
}

internal partial class BodyParameters {
  public string name;
  public string gravitational_parameter;
  public string reference_instant;
  public string min_radius;
  public string mean_radius;
  public string max_radius;
  public string axis_right_ascension;
  public string axis_declination;
  public string reference_angle;
  public string angular_frequency;
  public string reference_radius;
  public string j2;
  public BodyGeopotentialElement[] geopotential;
}

internal partial class Burn {
  public double thrust_in_kilonewtons;
  public double specific_impulse_in_seconds_g0;
  public NavigationFrameParameters frame;
  public double initial_time;
  public XYZ delta_v;
  public bool is_inertially_fixed;
}

internal partial class ConfigurationAccuracyParameters {
  public string fitting_tolerance;
  public string geopotential_tolerance;
}

internal partial class ConfigurationDownsamplingParameters {
  public string max_dense_intervals;
  public string tolerance;
}

internal partial class ConfigurationFixedStepParameters {
  public string fixed_step_size_integrator;
  public string integration_step_size;
}

internal partial class ConfigurationAdaptiveStepParameters {
  public string adaptive_step_size_integrator;
  public string length_integration_tolerance;
  public string speed_integration_tolerance;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct FlightPlanAdaptiveStepParameters {
  public long integrator_kind;
  public long generalized_integrator_kind;
  public long max_steps;
  public double length_integration_tolerance;
  public double speed_integration_tolerance;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct KeplerianElements {
  public double eccentricity;
  public double semimajor_axis;
  public double mean_motion;
  public double inclination_in_degrees;
  public double longitude_of_ascending_node_in_degrees;
  public double argument_of_periapsis_in_degrees;
  public double mean_anomaly;
}

internal partial class NavigationManoeuvre {
  public Burn burn;
  public double initial_mass_in_tonnes;
  public double final_mass_in_tonnes;
  public double mass_flow;
  public double duration;
  public double final_time;
  public double time_of_half_delta_v;
  public double time_to_half_delta_v;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct NavigationManoeuvreFrenetTrihedron {
  public XYZ binormal;
  public XYZ normal;
  public XYZ tangent;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct Node {
  public double time;
  public XYZ world_position;
  public double apparent_inclination_in_degrees;
  public double out_of_plane_velocity;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct Origin {
  private byte reference_part_is_at_origin_;
  public bool reference_part_is_at_origin {
    get { return reference_part_is_at_origin_ != (byte)0; }
    set { reference_part_is_at_origin_ = value ? (byte)1 : (byte)0; }
  }
  private byte reference_part_is_unmoving_;
  public bool reference_part_is_unmoving {
    get { return reference_part_is_unmoving_ != (byte)0; }
    set { reference_part_is_unmoving_ = value ? (byte)1 : (byte)0; }
  }
  public uint reference_part_id;
  public XYZ main_body_centre_in_world;
}

internal partial class PlottingFrameParameters {
  public int extension;
  public int centre_index;
  public int[] primary_index;
  public int[] secondary_index;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct QP {
  public XYZ q;
  public XYZ p;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct TQP {
  public double t;
  public QP qp;
}

internal partial class Status {
  public int error;
  public string message;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct WXYZ {
  public double w;
  public double x;
  public double y;
  public double z;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct QPRW {
  public QP qp;
  public WXYZ r;
  public XYZ w;
}

[StructLayout(LayoutKind.Sequential)]
public partial struct XY {
  public double x;
  public double y;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct Interval {
  public double min;
  public double max;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct OrbitalElements {
  public double sidereal_period;
  public double nodal_period;
  public double anomalistic_period;
  public double nodal_precession;
  public Interval mean_semimajor_axis;
  public Interval mean_eccentricity;
  public Interval mean_inclination;
  public Interval mean_longitude_of_ascending_nodes;
  public Interval mean_argument_of_periapsis;
  public Interval mean_periapsis_distance;
  public Interval mean_apoapsis_distance;
  public Interval radial_distance;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct OrbitRecurrence {
  public int nuo;
  public int dto;
  public int cto;
  public int number_of_revolutions;
  public double equatorial_shift;
  public double base_interval;
  public double grid_interval;
  public int subcycle;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct EquatorialCrossings {
  public Interval longitudes_reduced_to_ascending_pass;
  public Interval longitudes_reduced_to_descending_pass;
}

[StructLayout(LayoutKind.Sequential)]
internal partial struct SolarTimesOfNodes {
  public Interval mean_solar_times_of_ascending_nodes;
  public Interval mean_solar_times_of_descending_nodes;
}

internal partial class OrbitAnalysis {
  public double progress_of_next_analysis;
  public int? primary_index;
  public double mission_duration;
  public OrbitalElements? elements;
  public OrbitRecurrence? recurrence;
  public EquatorialCrossings? ground_track_equatorial_crossings;
  public SolarTimesOfNodes? solar_times_of_nodes;
}

internal static partial class Interface {

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__AdvanceTime",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void AdvanceTime(
      this IntPtr plugin,
      double t,
      double planetarium_rotation);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__AngularMomentumFromAngularVelocity",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XYZ AngularMomentumFromAngularVelocity(
      XYZ world_angular_velocity,
      XYZ moments_of_inertia_in_tonnes,
      WXYZ principal_axes_rotation,
      WXYZ part_rotation);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CameraReferenceRotation",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern WXYZ CameraReferenceRotation(
      this IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CameraScale",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern double CameraScale(
      this IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CatchUpLaggingVessels",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void CatchUpLaggingVessels(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator collided_vessels);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CelestialFromParent",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern QP CelestialFromParent(
      this IntPtr plugin,
      int celestial_index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CelestialInitialRotationInDegrees",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern double CelestialInitialRotationInDegrees(
      this IntPtr plugin,
      int celestial_index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CelestialRotation",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern WXYZ CelestialRotation(
      this IntPtr plugin,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CelestialRotationPeriod",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern double CelestialRotationPeriod(
      this IntPtr plugin,
      int celestial_index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CelestialSphereRotation",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern WXYZ CelestialSphereRotation(
      this IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CelestialWorldDegreesOfFreedom",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern QP CelestialWorldDegreesOfFreedom(
      this IntPtr plugin,
      int index,
      Origin origin,
      double time);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CollisionDeleteExecutor",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.I1)]
  internal static extern bool CollisionDeleteExecutor(
      this IntPtr plugin,
      ref IntPtr executor,
      out TQP collision);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CollisionGetLatitudeLongitude",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.I1)]
  internal static extern bool CollisionGetLatitudeLongitude(
      this IntPtr executor,
      out double latitude_in_degrees,
      out double longitude_in_degrees);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CollisionNewFlightPlanExecutor",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern IntPtr CollisionNewFlightPlanExecutor(
      this IntPtr plugin,
      int celestial_index,
      XYZ sun_world_position,
      int max_points,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CollisionNewPredictionExecutor",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern IntPtr CollisionNewPredictionExecutor(
      this IntPtr plugin,
      int celestial_index,
      XYZ sun_world_position,
      int max_points,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CollisionSetRadius",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void CollisionSetRadius(
      this IntPtr executor,
      double radius);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ClearFlags",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void ClearFlags();

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ClearTargetVessel",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void ClearTargetVessel(
      this IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ClearWorldRotationalReferenceFrame",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void ClearWorldRotationalReferenceFrame(
      this IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__CurrentTime",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern double CurrentTime(
      this IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__DeleteInterchange",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void DeleteInterchange(
      ref IntPtr native_pointer);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__DeletePlugin",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void DeletePlugin(
      ref IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__DeleteString",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void DeleteString(
      ref IntPtr native_string);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__DeleteU16String",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void DeleteU16String(
      ref IntPtr native_string);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__DeserializePlugin",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void DeserializePlugin(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string serialization,
      ref IntPtr deserializer,
      ref IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string compressor,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string encoder);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__EndInitialization",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void EndInitialization(
      this IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__EquipotentialCount",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int EquipotentialCount(
      this IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ExternalCelestialGetPosition",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status ExternalCelestialGetPosition(
      this IntPtr plugin,
      int body_index,
      double time,
      out XYZ position);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ExternalCelestialGetSurfacePosition",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status ExternalCelestialGetSurfacePosition(
      this IntPtr plugin,
      int body_index,
      double planetocentric_latitude_in_degrees,
      double planetocentric_longitude_in_degrees,
      double radius,
      double time,
      out XYZ position);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ExternalFlowFreefall",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status ExternalFlowFreefall(
      this IntPtr plugin,
      int central_body_index,
      QP world_body_centred_initial_degrees_of_freedom,
      double t_initial,
      double t_final,
      out QP world_body_centred_final_degrees_of_freedom);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ExternalGeopotentialGetCoefficient",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status ExternalGeopotentialGetCoefficient(
      this IntPtr plugin,
      int body_index,
      int degree,
      int order,
      out XY coefficient);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ExternalGeopotentialGetReferenceRadius",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status ExternalGeopotentialGetReferenceRadius(
      this IntPtr plugin,
      int body_index,
      out double reference_radius);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ExternalVesselGetPosition",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status ExternalVesselGetPosition(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      double time,
      out XYZ position);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ExternalGetNearestPlannedCoastDegreesOfFreedom",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status ExternalGetNearestPlannedCoastDegreesOfFreedom(
      this IntPtr plugin,
      int central_body_index,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int manoeuvre_index,
      XYZ world_body_centred_reference_position,
      out QP world_body_centred_nearest_degrees_of_freedom);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanCount",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int FlightPlanCount(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanCreate",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FlightPlanCreate(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      double final_time,
      double mass_in_tonnes);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanDelete",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FlightPlanDelete(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanDuplicate",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FlightPlanDuplicate(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanExists",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.I1)]
  internal static extern bool FlightPlanExists(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetAdaptiveStepParameters",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern FlightPlanAdaptiveStepParameters FlightPlanGetAdaptiveStepParameters(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetActualFinalTime",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern double FlightPlanGetActualFinalTime(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetAnomalousStatus",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status FlightPlanGetAnomalousStatus(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetCoastAnalysis",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<OrbitAnalysis, OrbitAnalysis.Marshaler>))]
  internal static extern OrbitAnalysis FlightPlanGetCoastAnalysis(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<int>))] BoxedInt32 revolutions_per_cycle,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<int>))] BoxedInt32 days_per_cycle,
      int ground_track_revolution,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetDesiredFinalTime",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern double FlightPlanGetDesiredFinalTime(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetGuidance",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XYZ FlightPlanGetGuidance(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetInitialTime",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern double FlightPlanGetInitialTime(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetManoeuvre",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<NavigationManoeuvre, NavigationManoeuvre.Marshaler>))]
  internal static extern NavigationManoeuvre FlightPlanGetManoeuvre(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetManoeuvreFrenetTrihedron",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern NavigationManoeuvreFrenetTrihedron FlightPlanGetManoeuvreFrenetTrihedron(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanGetManoeuvreInitialPlottedVelocity",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XYZ FlightPlanGetManoeuvreInitialPlottedVelocity(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanInsert",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status FlightPlanInsert(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(Burn.Marshaler))] Burn burn,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanNumberOfAnomalousManoeuvres",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int FlightPlanNumberOfAnomalousManoeuvres(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanNumberOfManoeuvres",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int FlightPlanNumberOfManoeuvres(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanNumberOfSegments",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int FlightPlanNumberOfSegments(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanOptimizationDriverInProgress",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int FlightPlanOptimizationDriverInProgress(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanOptimizationDriverMake",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FlightPlanOptimizationDriverMake(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      double distance,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<double>))] BoxedDouble inclination_in_degrees,
      int celestial_index,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NavigationFrameParameters.Marshaler))] NavigationFrameParameters navigation_frame_parameters);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanOptimizationDriverStart",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FlightPlanOptimizationDriverStart(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int manoeuvre_index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanRebase",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status FlightPlanRebase(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      double mass_in_tonnes);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanRemove",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status FlightPlanRemove(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanRenderedApsides",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FlightPlanRenderedApsides(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<double>))] BoxedDouble t_max,
      int celestial_index,
      XYZ sun_world_position,
      int max_points,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator apoapsides,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator periapsides);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanRenderedClosestApproaches",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FlightPlanRenderedClosestApproaches(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      XYZ sun_world_position,
      int max_points,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator closest_approaches);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanRenderedNodes",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FlightPlanRenderedNodes(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<double>))] BoxedDouble t_max,
      XYZ sun_world_position,
      int max_points,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator ascending,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator descending);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanRenderedSegment",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))]
  internal static extern DisposableIterator FlightPlanRenderedSegment(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      XYZ sun_world_position,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanReplace",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status FlightPlanReplace(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(Burn.Marshaler))] Burn burn,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanSelect",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FlightPlanSelect(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanSelected",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int FlightPlanSelected(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanSetAdaptiveStepParameters",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status FlightPlanSetAdaptiveStepParameters(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      FlightPlanAdaptiveStepParameters flight_plan_adaptive_step_parameters);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanSetDesiredFinalTime",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status FlightPlanSetDesiredFinalTime(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      double final_time);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FlightPlanUpdateFromOptimization",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.I1)]
  internal static extern bool FlightPlanUpdateFromOptimization(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FreeVesselsAndPartsAndCollectPileUps",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FreeVesselsAndPartsAndCollectPileUps(
      this IntPtr plugin,
      double delta_t);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FutureCatchUpVessel",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern IntPtr FutureCatchUpVessel(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__FutureWaitForVesselToCatchUp",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void FutureWaitForVesselToCatchUp(
      this IntPtr plugin,
      ref IntPtr future,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator collided_vessels);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__GetBufferDuration",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int GetBufferDuration();

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__GetBufferedLogging",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int GetBufferedLogging();

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__GetStderrLogging",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int GetStderrLogging();

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__GetSuppressedLogging",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int GetSuppressedLogging();

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__GetVerboseLogging",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int GetVerboseLogging();

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__GetVersion",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void GetVersion(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] out string build_date,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] out string version);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__HasEncounteredApocalypse",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.I1)]
  internal static extern bool HasEncounteredApocalypse(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferUTF8Marshaler))] out string details);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__HasVessel",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.I1)]
  internal static extern bool HasVessel(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__InitializeDownsamplingParameters",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void InitializeDownsamplingParameters(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConfigurationDownsamplingParameters.Marshaler))] ConfigurationDownsamplingParameters downsampling_parameters);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__InitializeEphemerisParameters",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void InitializeEphemerisParameters(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConfigurationAccuracyParameters.Marshaler))] ConfigurationAccuracyParameters accuracy_parameters,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConfigurationFixedStepParameters.Marshaler))] ConfigurationFixedStepParameters fixed_step_parameters);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__InitializeHistoryParameters",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void InitializeHistoryParameters(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConfigurationFixedStepParameters.Marshaler))] ConfigurationFixedStepParameters fixed_step_parameters);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__InitializePsychohistoryParameters",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void InitializePsychohistoryParameters(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(ConfigurationAdaptiveStepParameters.Marshaler))] ConfigurationAdaptiveStepParameters parameters);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__InsertCelestialAbsoluteCartesian",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void InsertCelestialAbsoluteCartesian(
      this IntPtr plugin,
      int celestial_index,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<int>))] BoxedInt32 parent_index,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(BodyParameters.Marshaler))] BodyParameters body_parameters,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string x,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string y,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string z,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vx,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vy,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vz);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__InsertCelestialJacobiKeplerian",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void InsertCelestialJacobiKeplerian(
      this IntPtr plugin,
      int celestial_index,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<int>))] BoxedInt32 parent_index,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(BodyParameters.Marshaler))] BodyParameters body_parameters,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<KeplerianElements>))] BoxedKeplerianElements keplerian_elements);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__InsertOrKeepVessel",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void InsertOrKeepVessel(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_name,
      int parent_index,
      [MarshalAs(UnmanagedType.I1)] bool loaded,
      [MarshalAs(UnmanagedType.I1)] out bool inserted);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__InsertOrKeepLoadedPart",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void InsertOrKeepLoadedPart(
      this IntPtr plugin,
      uint part_id,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string name,
      double mass_in_tonnes,
      XYZ centre_of_mass,
      XYZ moments_of_inertia_in_tonnes,
      WXYZ principal_axes_rotation,
      [MarshalAs(UnmanagedType.I1)] bool is_solid_rocket_motor,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int main_body_index,
      QP main_body_world_degrees_of_freedom,
      QP part_world_degrees_of_freedom,
      WXYZ part_rotation,
      XYZ part_angular_velocity,
      double delta_t);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__InsertUnloadedPart",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void InsertUnloadedPart(
      this IntPtr plugin,
      uint part_id,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string name,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      QP from_parent);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorAtEnd",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.I1)]
  internal static extern bool IteratorAtEnd(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorDelete",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void IteratorDelete(
      ref IntPtr iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorGetDiscreteTrajectoryQP",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern QP IteratorGetDiscreteTrajectoryQP(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorGetDiscreteTrajectoryTime",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern double IteratorGetDiscreteTrajectoryTime(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorGetDiscreteTrajectoryXYZ",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XYZ IteratorGetDiscreteTrajectoryXYZ(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorGetNode",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern Node IteratorGetNode(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorGetRP2LinesIterator",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))]
  internal static extern DisposableIterator IteratorGetRP2LinesIterator(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorGetRP2LineXY",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XY IteratorGetRP2LineXY(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorGetVesselGuid",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))]
  internal static extern string IteratorGetVesselGuid(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorIncrement",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void IteratorIncrement(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorReset",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void IteratorReset(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__IteratorSize",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern int IteratorSize(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] this DisposableIterator iterator);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__LogError",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void LogError(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string file,
      int line,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string text);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__LogFatal",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void LogFatal(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string file,
      int line,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string text);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__LogInfo",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void LogInfo(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string file,
      int line,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string text);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__LogWarning",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void LogWarning(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string file,
      int line,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string text);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__MonitorSetName",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void MonitorSetName(
      int i,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string name);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__MonitorStart",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void MonitorStart(
      int i);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__MonitorStop",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void MonitorStop(
      int i);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__NavballOrientation",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern WXYZ NavballOrientation(
      this IntPtr plugin,
      XYZ sun_world_position,
      XYZ ship_world_position);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__NewPlugin",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern IntPtr NewPlugin(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string game_epoch,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string solar_system_epoch,
      double planetarium_rotation_in_degrees);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PartApplyIntrinsicForce",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PartApplyIntrinsicForce(
      this IntPtr plugin,
      uint part_id,
      XYZ force_in_kilonewtons);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PartApplyIntrinsicForceAtPosition",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PartApplyIntrinsicForceAtPosition(
      this IntPtr plugin,
      uint part_id,
      XYZ force_in_kilonewtons,
      XYZ lever_arm);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PartApplyIntrinsicTorque",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PartApplyIntrinsicTorque(
      this IntPtr plugin,
      uint part_id,
      XYZ torque_in_kilonewton_metre);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PartGetActualRigidMotion",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern QPRW PartGetActualRigidMotion(
      this IntPtr plugin,
      uint part_id,
      Origin origin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PartIsTruthful",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.I1)]
  internal static extern bool PartIsTruthful(
      this IntPtr plugin,
      uint part_id);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PartSetApparentRigidMotion",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PartSetApparentRigidMotion(
      this IntPtr plugin,
      uint part_id,
      QP degrees_of_freedom,
      WXYZ rotation,
      XYZ angular_velocity);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PlanetariumCreate",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposablePlanetariumMarshaler))]
  internal static extern DisposablePlanetarium PlanetariumCreate(
      this IntPtr plugin,
      XYZ sun_world_position,
      XYZ xyz_opengl_camera_x_in_world,
      XYZ xyz_opengl_camera_y_in_world,
      XYZ xyz_opengl_camera_z_in_world,
      XYZ xyz_camera_position_in_world,
      double focal,
      double field_of_view,
      double inverse_scale_factor,
      double angular_resolution,
      XYZ scaled_space_origin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PlanetariumDelete",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PlanetariumDelete(
      ref IntPtr planetarium);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PlanetariumPlotCelestialFutureTrajectory",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PlanetariumPlotCelestialFutureTrajectory(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposablePlanetariumMarshaler))] this DisposablePlanetarium planetarium,
      IntPtr plugin,
      int celestial_index,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      IntPtr vertices,
      int vertices_size,
      out double minimal_distance_from_camera,
      out int vertex_count);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PlanetariumPlotCelestialPastTrajectory",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PlanetariumPlotCelestialPastTrajectory(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposablePlanetariumMarshaler))] this DisposablePlanetarium planetarium,
      IntPtr plugin,
      int celestial_index,
      double max_history_length,
      IntPtr vertices,
      int vertices_size,
      out double minimal_distance_from_camera,
      out int vertex_count);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PlanetariumPlotEquipotential",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PlanetariumPlotEquipotential(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposablePlanetariumMarshaler))] this DisposablePlanetarium planetarium,
      IntPtr plugin,
      int index,
      IntPtr vertices,
      int vertices_size,
      out int vertex_count);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PlanetariumPlotFlightPlanSegment",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PlanetariumPlotFlightPlanSegment(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposablePlanetariumMarshaler))] this DisposablePlanetarium planetarium,
      IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int index,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<double>))] BoxedDouble t_max,
      IntPtr vertices,
      int vertices_size,
      out int vertex_count);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PlanetariumPlotPrediction",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PlanetariumPlotPrediction(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposablePlanetariumMarshaler))] this DisposablePlanetarium planetarium,
      IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<double>))] BoxedDouble t_max,
      IntPtr vertices,
      int vertices_size,
      out int vertex_count);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PlanetariumPlotPsychohistory",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PlanetariumPlotPsychohistory(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposablePlanetariumMarshaler))] this DisposablePlanetarium planetarium,
      IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      double max_history_length,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<double>))] BoxedDouble t_max,
      IntPtr vertices,
      int vertices_size,
      out int vertex_count);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__PrepareToReportCollisions",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void PrepareToReportCollisions(
      this IntPtr plugin);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__RenderedPredictionApsides",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void RenderedPredictionApsides(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<double>))] BoxedDouble t_max,
      int celestial_index,
      XYZ sun_world_position,
      int max_points,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator apoapsides,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator periapsides);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__RenderedPredictionClosestApproaches",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void RenderedPredictionClosestApproaches(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      XYZ sun_world_position,
      int max_points,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator closest_approaches);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__RenderedPredictionNodes",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void RenderedPredictionNodes(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<double>))] BoxedDouble t_max,
      XYZ sun_world_position,
      int max_points,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator ascending,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(DisposableIteratorMarshaler))] out DisposableIterator descending);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ReportGroundCollision",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void ReportGroundCollision(
      this IntPtr plugin,
      uint part_id);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__ReportPartCollision",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void ReportPartCollision(
      this IntPtr plugin,
      uint part1_id,
      uint part2_id);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SayHello",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))]
  internal static extern string SayHello();

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SayNotFound",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<Status, Status.Marshaler>))]
  internal static extern Status SayNotFound();

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SerializePlugin",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferUTF8Marshaler))]
  internal static extern string SerializePlugin(
      this IntPtr plugin,
      ref IntPtr serializer,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string compressor,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string encoder);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetBufferDuration",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetBufferDuration(
      int seconds);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetBufferedLogging",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetBufferedLogging(
      int max_severity);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetFlag",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetFlag(
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string name,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string value);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetMainBody",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetMainBody(
      this IntPtr plugin,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetPlottingFrame",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetPlottingFrame(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(PlottingFrameParameters.Marshaler))] PlottingFrameParameters parameters);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetStderrLogging",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetStderrLogging(
      int min_severity);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetSuppressedLogging",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetSuppressedLogging(
      int min_severity);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetTargetVessel",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetTargetVessel(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      int reference_body_index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetVerboseLogging",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetVerboseLogging(
      int level);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__SetWorldRotationalReferenceFrame",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void SetWorldRotationalReferenceFrame(
      this IntPtr plugin,
      int index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__UnmanageableVesselVelocity",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XYZ UnmanageableVesselVelocity(
      this IntPtr plugin,
      QP degrees_of_freedom,
      int celestial_index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__UpdateCelestialHierarchy",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void UpdateCelestialHierarchy(
      this IntPtr plugin,
      int celestial_index,
      int parent_index);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__UpdatePrediction",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void UpdatePrediction(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(RepeatedMarshaler<String, NoOwnershipTransferUTF8Marshaler>))] string[] vessel_guids);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__VesselBinormal",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XYZ VesselBinormal(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__VesselFromParent",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern QP VesselFromParent(
      this IntPtr plugin,
      int parent_index,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__VesselGetAnalysis",
             CallingConvention = CallingConvention.Cdecl)]
  [return : MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OwnershipTransferMarshaler<OrbitAnalysis, OrbitAnalysis.Marshaler>))]
  internal static extern OrbitAnalysis VesselGetAnalysis(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<int>))] BoxedInt32 revolutions_per_cycle,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(OptionalMarshaler<int>))] BoxedInt32 days_per_cycle,
      int ground_track_revolution);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__VesselGetPredictionAdaptiveStepParameters",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern AdaptiveStepParameters VesselGetPredictionAdaptiveStepParameters(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__VesselNormal",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XYZ VesselNormal(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__VesselRequestAnalysis",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void VesselRequestAnalysis(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      double mission_duration);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__VesselSetPredictionAdaptiveStepParameters",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern void VesselSetPredictionAdaptiveStepParameters(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid,
      AdaptiveStepParameters adaptive_step_parameters);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__VesselTangent",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XYZ VesselTangent(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

  [DllImport(dllName           : dll_path,
             EntryPoint        = "principia__VesselVelocity",
             CallingConvention = CallingConvention.Cdecl)]
  internal static extern XYZ VesselVelocity(
      this IntPtr plugin,
      [MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NoOwnershipTransferUTF8Marshaler))] string vessel_guid);

}

}  // namespace ksp_plugin_adapter
}  // namespace principia
